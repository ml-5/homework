1栈
先进后出表。1,2,3....,n,通过一个栈出栈的序列个数？
1/n+1 C(2n选n)=(1/n+1) *(2n)!/n!*n!

2一个大小为n的顺序栈，最多只能进行n次进栈操作吗？
错误:可以进行任意多次进栈操作
      但最多只能进行连续n次的进栈操作

3.顺序栈只能将栈设置在data[0]端吗？
可以将栈设置在任意的一端，但不能设置在中间
eg:可将栈底设置在data[M-1]端
初始化: top=M
栈空: top==M
栈满:top==0
元素进栈:top--;data[top]=e;
出栈:e=data[top];top++;

4.共享栈
初始化:top=-1,top=M
栈1空： top1==-1 
栈2空：top2==M
栈满： top1+1=top2
元素进栈1：top1++; data[top1]=e;
元素进栈2：top2--; data[top2]=e; 
栈1出栈： e=data[top1]; top1--; 
栈2出栈： e=data[top2]; top2++;

队列
1.先进先出表。1,2,3....n,通过一个队列的出队序列？
只有一个 1，2....n

2.环形队列解决了假溢出问题，任何情况下都使用环形队列吗？
采用环形队列时，进队的元素可能被覆盖。
如果需要用队列中全部进队的元素进一步求解问题，应该采用
非环形队列。如用队列求解迷宫路径！

3.如果需要多个队列，可以像共享栈一样设置共享队列吗？ 如果需要使用10个队列，如何设计？
不能。因为栈是向一端生长的，而队列不是。为了节省空间，应该
采用链队。
如果需要使用10个队列，可以设置10个链队：
队头指针：front[10]
队尾指针：rear[10]

3.栈和队列的应用
先产生的数据后处理―栈（先进后出表）
先产生的数据先处理―队列（先进先出表）